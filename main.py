import streamlit as st

# MBTI별 추천 직업 데이터
mbti_jobs = {
    "INTJ": ["연구원", "과학자", "기술 컨설턴트", "전략 기획자"],
    "INTP": ["소프트웨어 개발자", "기술 연구원", "문제 해결 전문가", "작가"],
    "ENTJ": ["경영자", "CEO", "전략 컨설턴트", "프로젝트 매니저"],
    "ENTP": ["발명가", "스타트업 창업자", "아이디어 제시자", "마케팅 전문가"],
    "INFJ": ["심리학자", "사회 복지사", "교육자", "작가"],
    "INFP": ["작가", "상담가", "사회 복지사", "예술가"],
    "ENFJ": ["교사", "상담가", "사회 운동가", "리더"],
    "ENFP": ["마케팅 전문가", "심리학자", "연구원", "영감을 주는 연설자"],
    "ISFJ": ["간호사", "교사", "사회 복지사", "도서관 사서"],
    "ISFP": ["예술가", "디자이너", "음악가", "환경 보호 활동가"],
    "ESFJ": ["간호사", "교사", "사회 복지사", "행사 기획자"],
    "ESFP": ["연예인", "연극 배우", "디자이너", "이벤트 플래너"],
    "ISTJ": ["회계사", "법률 전문가", "군인", "행정 직원"],
    "ISTP": ["기계 엔지니어", "파일럿", "소프트웨어 개발자", "모험가"],
    "ESTJ": ["경영자", "군인", "행정직", "감독"],
    "ESTP": ["사업가", "스포츠 선수", "마케팅 전문가", "모험가"]
}

# Streamlit 앱
def main():
    st.title("MBTI와 잘 어울리는 직업 추천 웹앱")
    
    # MBTI 유형 입력 받기
    mbti_type = st.selectbox("당신의 MBTI 유형을 선택하세요", list(mbti_jobs.keys()))
    
    # 직업 추천 출력
    if mbti_type:
        st.subheader(f"{mbti_type} 유형에 잘 어울리는 직업들:")
        for job in mbti_jobs[mbti_type]:
            st.write(f"- {job}")

if __name__ == "__main__":
    main()
